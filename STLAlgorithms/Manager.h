#pragma once

#include <bit>
#include <array>
#include <string>

enum Catalogs : int
{
	NON_MODIFYING_SEQUENCE_OPERATIONS = 0,
	MODIFYING_SEQUENCE_OPERATIONS,
	PARTITIONING_OPERATIONS,
	SORTING_OPERATIONS,
	BINARY_SEARCH_OPERATIONS_ON_SORTED_RANGES,
	OTHER_OPERATIONS_ON_SORTED_RANGES,
	SET_OPERATIONS_ON_SORTED_RANGES,
	HEAP_OPERATIONS,
	MINIMUM_MAXIMUM_OPERATIONS,
	COMPARISON_OPERATIONS,
	PERMUTATION_OPERATIONS,
	NUMERIC_OPERATIONS,
	OPERATIONS_ON_UNINITIALIZED_MEMORY,
	CATALOGS_END
};

class Manager
{
public:
	Manager();
	void start() const;

private:
	void printCatalogs() const;

private:
	std::array<std::string, Catalogs::CATALOGS_END> mCatalogs;
};

